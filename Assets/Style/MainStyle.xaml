<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:controls="clr-namespace:MFAWPF.Views.UserControl"
    xmlns:controls1="clr-namespace:MFAWPF.Views.UserControl"
    xmlns:hc="https://handyorg.github.io/handycontrol"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <!--  Start: Button | Minimize | Maximize | Close  -->
    <Style TargetType="{x:Type Button}" x:Key="IconButtonsStyle">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="0"
                        Name="bd">
                        <Path
                            Data="{TemplateBinding Content}"
                            Fill="{DynamicResource ActionIconColor}"
                            Height="10"
                            Name="ico"
                            Stretch="Uniform"
                            Width="10" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding WindowState, RelativeSource={RelativeSource AncestorType=Window}}" Value="Maximized" />
                                <Condition Binding="{Binding Tag, RelativeSource={RelativeSource Self}}" Value="IsCloseButton" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="CornerRadius" TargetName="bd" Value="0" />
                        </MultiDataTrigger>

                        <!--  窗口正常状态，且为关闭按钮时，使用圆角  -->
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding WindowState, RelativeSource={RelativeSource AncestorType=Window}}" Value="Normal" />
                                <Condition Binding="{Binding Tag, RelativeSource={RelativeSource Self}}" Value="IsCloseButton" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="CornerRadius" TargetName="bd" Value="8,0,0,0" />
                        </MultiDataTrigger>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource GrayColor5}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="Tag" Value="IsCloseButton" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="{DynamicResource RedColor1}" />
                            <Setter Property="Fill" TargetName="ico" Value="{DynamicResource PrimaryBackgroundColor}" />
                        </MultiTrigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Fill" TargetName="ico" Value="{DynamicResource PrimaryBackgroundColor}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style BasedOn="{StaticResource ButtonDefault}" TargetType="{x:Type controls1:PinButton}">
        <Setter Property="Foreground" Value="{DynamicResource ActionIconColor}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="BorderThickness" Value="0" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource GrayColor11}" />
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource PrimaryBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--  End: Button | Minimize | Maximize | Close  -->


    <Style
        BasedOn="{StaticResource ListBoxItemBaseStyle}"
        TargetType="ListBoxItem"
        x:Key="CustomListBoxItemStyle">
        <Setter Property="Padding" Value="10,0,0,0" />
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="true">
                <Setter Property="Background" Value="{DynamicResource RegionBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style
        BasedOn="{StaticResource ButtonIcon}"
        TargetType="Button"
        x:Key="textBoxButton">
        <Setter Property="Cursor" Value="Arrow" />
        <Setter Property="hc:VisualElement.HighlightBackground" Value="Transparent" />
        <Setter Property="hc:VisualElement.HighlightForeground" Value="{DynamicResource PrimaryBrush}" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Cursor" Value="Hand" />
            </Trigger>
        </Style.Triggers>
    </Style>


    <Style TargetType="TextBlock" x:Key="textTitle">
        <Setter Property="Foreground" Value="{DynamicResource BlueColor2}" />
        <Setter Property="FontSize" Value="20" />
        <Setter Property="FontWeight" Value="SemiBold" />
    </Style>


    <Style
        BasedOn="{StaticResource TabItemInLine}"
        TargetType="{x:Type TabItem}"
        x:Key="CustomTabItemStyle">
        <Setter Property="Background" Value="{StaticResource MainContentBackgroundBrush}" />
        <!-- <Style.Triggers> -->
        <!--     <MultiTrigger Property="IsMouseOver" Value="True"> -->
        <!--         <Setter Property="Background" Value="{StaticResource MainContentForegroundBrush}" /> -->
        <!--     </MultiTrigger> -->
        <!-- </Style.Triggers> -->
    </Style>

    <Style
        BasedOn="{StaticResource ButtonDefault}"
        TargetType="controls1:AttributeButton"
        x:Key="AttributeButtonStyle">
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="LightBlue" />
                <Setter Property="BorderBrush" Value="Blue" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style BasedOn="{StaticResource DividerBaseStyle}" TargetType="hc:Divider">
        <Setter Property="Foreground" Value="{DynamicResource SecondaryBorderBrush}" />
        <Setter Property="LineStroke" Value="{DynamicResource SecondaryBorderBrush}" />
    </Style>
    <!--  End: VerticalMenuStyle  -->
</ResourceDictionary>