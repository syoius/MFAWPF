<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="clr-namespace:MFAWPF.Controls"
                    xmlns:hc="https://handyorg.github.io/handycontrol">
    <!-- Start: Button | Minimize | Maximize | Close -->
    <Style x:Key="IconButtonsStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Name="bd" CornerRadius="0" Background="{TemplateBinding Background}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <Path Name="ico" Data="{TemplateBinding Content}" Fill="{DynamicResource ActionIconColor}"
                              Height="10" Width="10" Stretch="Uniform" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition
                                    Binding="{Binding WindowState, RelativeSource={RelativeSource AncestorType=Window}}"
                                    Value="Maximized" />
                                <Condition Binding="{Binding Tag, RelativeSource={RelativeSource Self}}"
                                           Value="IsCloseButton" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="bd" Property="CornerRadius" Value="0" />
                        </MultiDataTrigger>

                        <!-- 窗口正常状态，且为关闭按钮时，使用圆角 -->
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition
                                    Binding="{Binding WindowState, RelativeSource={RelativeSource AncestorType=Window}}"
                                    Value="Normal" />
                                <Condition Binding="{Binding Tag, RelativeSource={RelativeSource Self}}"
                                           Value="IsCloseButton" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="bd" Property="CornerRadius" Value="8,0,0,0" />
                        </MultiDataTrigger>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource GrayColor5}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="Tag" Value="IsCloseButton" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="{DynamicResource RedColor1}" />
                            <Setter TargetName="ico" Property="Fill" Value="{DynamicResource PrimaryBackgroundColor}" />
                        </MultiTrigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="ico" Property="Fill" Value="{DynamicResource PrimaryBackgroundColor}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type controls:PinButton}" BasedOn="{StaticResource ButtonDefault}">
        <Setter Property="Foreground" Value="{DynamicResource ActionIconColor}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="BorderThickness" Value="0" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource GrayColor11}" />
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource PrimaryBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <!-- End: Button | Minimize | Maximize | Close -->
    

    <Style
        x:Key="CustomListBoxItemStyle"
        BasedOn="{StaticResource ListBoxItemBaseStyle}"
        TargetType="ListBoxItem">
        <Setter Property="Padding" Value="10,0,0,0" />
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="true">
                <Setter Property="Background" Value="{DynamicResource RegionBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="textBoxButton" TargetType="Button" BasedOn="{StaticResource ButtonIcon}">
        <Setter Property="Cursor" Value="Arrow" />
        <Setter Property="hc:VisualElement.HighlightBackground" Value="Transparent" />
        <Setter Property="hc:VisualElement.HighlightForeground" Value="{DynamicResource PrimaryBrush}" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Cursor" Value="Hand" />
            </Trigger>
        </Style.Triggers>
    </Style>


    <Style x:Key="textTitle" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{DynamicResource BlueColor2}" />
        <Setter Property="FontSize" Value="20" />
        <Setter Property="FontWeight" Value="SemiBold" />
    </Style>


    <Style x:Key="CustomTabItemStyle" TargetType="{x:Type TabItem}" BasedOn="{StaticResource TabItemInLine}">
        <Setter Property="Background" Value="{StaticResource MainContentBackgroundBrush}" />
        <!-- <Style.Triggers> -->
        <!--     <MultiTrigger Property="IsMouseOver" Value="True"> -->
        <!--         <Setter Property="Background" Value="{StaticResource MainContentForegroundBrush}" /> -->
        <!--     </MultiTrigger> -->
        <!-- </Style.Triggers> -->
    </Style>

    <Style TargetType="controls:AttributeButton" x:Key="AttributeButtonStyle" BasedOn="{StaticResource ButtonDefault}">
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="LightBlue" />
                <Setter Property="BorderBrush" Value="Blue" />
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <Style TargetType="hc:Divider" BasedOn="{StaticResource DividerBaseStyle}">
        <Setter Property="Foreground" Value="{DynamicResource SecondaryBorderBrush}" />
        <Setter Property="LineStroke" Value="{DynamicResource GrayColor5}" />
    </Style>
    <!-- End: VerticalMenuStyle -->
</ResourceDictionary>